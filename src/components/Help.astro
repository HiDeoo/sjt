<h2>How to use</h2>

<p>This website is mostly for demonstration purposes and using one of the following methods is recommended:</p>

<sjt-help>
  <div>
    <ul role="tablist">
      <li role="presentation">
        <a role="tab" href="#tab-panel-chrome" id="tab-chrome" aria-selected="true">Chrome</a>
      </li>
      <li role="presentation">
        <a role="tab" href="#tab-panel-firefox" id="tab-firefox" tabindex="-1">Firefox</a>
      </li>
      <li role="presentation">
        <a role="tab" href="#tab-panel-alfred" id="tab-alfred" tabindex="-1">Alfred</a>
      </li>
    </ul>
  </div>
  <section id="tab-panel-chrome" aria-labelledby="tab-chrome" role="tabpanel" tabindex="0">
    <ol>
      <li>Open Chrome settings</li>
      <li>Section <em>Search engine</em> â†’ <em>Manage search engines and site search</em></li>
      <li>In the <em>Site Search</em> section, <em>Add</em> a new search engine</li>
      <li>
        Fill the form with the following values:
        <table>
          <thead>
            <tr>
              <th>Field</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Name</td>
              <td><code>Starlight Jump To</code></td>
            </tr>
            <tr>
              <td>Shortcut</td>
              <td><code>sjt</code> or <code>s</code></td>
            </tr>
            <tr>
              <td>URL</td>
              <td><code>https://sjt.vercel.app/?q=%s</code></td>
            </tr>
          </tbody>
        </table>
      </li>
    </ol>
    <p>Typing <code>sjt [command]</code> in the address bar will now redirect you to the corresponding page.</p>
  </section>
  <section id="tab-panel-firefox" aria-labelledby="tab-firefox" role="tabpanel" tabindex="0" hidden>
    <ol>
      <li>Right click on the search input above</li>
      <li>Select <em>Add a Keyword for this Search</em></li>
      <li>
        Fill the form with the following values:
        <table>
          <thead>
            <tr>
              <th>Field</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Name</td>
              <td><code>Starlight Jump To</code></td>
            </tr>
            <tr>
              <td>Keyword</td>
              <td><code>sjt</code> or <code>s</code></td>
            </tr>
          </tbody>
        </table>
      </li>
    </ol>
    <p>Typing <code>sjt [command]</code> in the address bar will now redirect you to the corresponding page.</p>
  </section>
  <section id="tab-panel-alfred" aria-labelledby="tab-alfred" role="tabpanel" tabindex="0" hidden>
    <ol>
      <li>
        Open the following
        <!-- // TODO(HiDeoo) LINK -->
        <a href="alfred://customsearch/Starlight%20Jump%20To/sjt/utf8/nospace/http://localhost:3000/?q=%7Bquery%7D">
          link
        </a>
      </li>
      <li>Choose <em>Open Alfred 5.app</em></li>
    </ol>
    <p>Typing <code>sjt [command]</code> in Alfred will now redirect you to the corresponding page.</p>
  </section>
</sjt-help>

<style>
  sjt-help {
    display: block;
    margin-top: 1rem;
  }

  div {
    overflow-x: auto;
  }

  li {
    margin-bottom: -2px;
  }

  [role='tablist'] {
    border-bottom: 2px solid var(--color-gray-800);
    display: flex;
    list-style: none;
    padding: 0;
  }

  [role='tab'] {
    border-bottom: 2px solid var(--color-gray-800);
    color: var(--color-gray-400);
    display: block;
    outline-offset: -2px;
    padding: 0 1.25rem;
    text-decoration: none;
  }

  [role='tab'][aria-selected] {
    border-color: var(--color-gray-300);
    color: var(--color-gray-300);
    font-weight: 600;
  }

  [role='tab'][aria-selected]:focus-visible {
    border-radius: 0.25rem;
    outline: 2px solid var(--color-gray-300);
  }

  section {
    border-radius: 0.25rem;
    margin-top: 1rem;
  }

  section:focus-visible {
    outline: 2px solid var(--color-gray-300);
  }

  ul {
    list-style-type: initial;
  }

  ol {
    list-style-type: decimal;
  }

  ul,
  ol {
    padding-left: 1.5rem;
  }

  section li {
    line-height: 1.3;
  }

  section li + li {
    margin-top: 0.5rem;
  }

  table {
    margin-top: 0.5rem;
  }

  th,
  td {
    border: 1px solid var(--color-gray-800);
    padding: 0.375rem 1rem;
  }

  tr > td:last-child {
    width: 100%;
  }

  code {
    background-color: var(--color-gray-800);
    border-radius: 0.25rem;
    color: var(--color-white);
    display: inline;
    font-size: 0.875rem;
    line-height: 1;
    padding: 0.125rem 0.375rem;
  }

  section p {
    margin-top: 1rem;
  }
</style>

<script>
  customElements.define(
    'sjt-help',
    // https://github.com/withastro/starlight/blob/main/packages/starlight/user-components/Tabs.astro
    class SJTHelp extends HTMLElement {
      tabs: HTMLAnchorElement[]
      panels: HTMLElement[]

      constructor() {
        super()

        const tabList = this.querySelector<HTMLUListElement>('[role="tablist"]')
        this.tabs = [...(tabList?.querySelectorAll<HTMLAnchorElement>('[role="tab"]') ?? [])]
        this.panels = [...this.querySelectorAll<HTMLElement>(':scope > [role="tabpanel"]')]

        for (const [index, tab] of this.tabs.entries()) {
          tab.addEventListener('click', (event) => {
            event.preventDefault()

            const currentTab = tabList?.querySelector('[aria-selected]')
            if (!(event.currentTarget instanceof HTMLAnchorElement) || event.currentTarget === currentTab) return

            this.switchTab(event.currentTarget, index)
          })

          tab.addEventListener('keydown', (event) => {
            if (!(event.currentTarget instanceof HTMLAnchorElement)) return

            const index = this.tabs.indexOf(event.currentTarget)
            const nextIndex =
              event.key === 'ArrowLeft'
                ? index - 1
                : event.key === 'ArrowRight'
                  ? index + 1
                  : event.key === 'Home'
                    ? 0
                    : event.key === 'End'
                      ? this.tabs.length - 1
                      : null

            if (nextIndex === null) return
            const nextTab = this.tabs[nextIndex]
            if (!nextTab) return

            this.switchTab(nextTab, nextIndex)
          })
        }
      }

      switchTab(newTab: HTMLAnchorElement, index: number) {
        if (!newTab) return

        for (const tab of this.tabs) {
          tab.removeAttribute('aria-selected')
          tab.setAttribute('tabindex', '-1')
        }

        for (const panel of this.panels) {
          panel.hidden = true
        }

        const newPanel = this.panels[index]
        if (!newPanel) return

        newPanel.hidden = false
        newTab.removeAttribute('tabindex')
        newTab.setAttribute('aria-selected', 'true')
        newTab.focus()
      }
    },
  )
</script>
